CCS PCM C Compiler, Version 5.008, 5967               11-jul-16 19:08

               Filename:   C:\Users\Bellini\Documents\Projetos PIC\InterrupcaoBasicaRB0\codigo.lst

               ROM used:   78 words (1%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           13 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   035
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16F876.h> 
.................... //////// Standard Header file for the PIC16F876 device //////////////// 
.................... #device PIC16F876 
....................  
.................... #list 
....................  
.................... #fuses XT,NOWDT, PUT, NOWRT 
.................... #use delay(clock=4000000) 
.................... #use fast_io(B) 
.................... int1 troca=0; 
....................  
.................... #INT_EXT            		   //interrupcao externa1 
.................... ext_isr(){        			   //funcao q atende a interrup√ßao 
....................    output_toggle(PIN_B7); 
002F:  MOVLW  80
0030:  XORWF  06,F
0031:  BCF    0B.1
0032:  BCF    0A.3
0033:  BCF    0A.4
0034:  GOTO   01B
.................... } 
....................  
.................... void main(){ 
0035:  MOVF   03,W
0036:  ANDLW  1F
0037:  MOVWF  03
0038:  BCF    27.0
0039:  BSF    03.5
003A:  BSF    1F.0
003B:  BSF    1F.1
003C:  BSF    1F.2
003D:  BCF    1F.3
003E:  BCF    03.7
....................    set_tris_B(0x01);      		//B0 como entrada, B7 como saida 
003F:  MOVLW  01
0040:  MOVWF  06
....................    output_low(PIN_B7);      	//Apago o LED 
0041:  BCF    03.5
0042:  BCF    06.7
....................    port_b_pullups(TRUE);    	//seta os resistores pullups da porta B 
0043:  BSF    03.5
0044:  BCF    01.7
....................    enable_interrupts(int_ext);  //Habilita interrupcao ext1 
0045:  BCF    03.5
0046:  BSF    0B.4
....................    ext_int_edge(L_TO_H);    	//Habilita interrupcao por subida de borda 
0047:  BSF    03.5
0048:  BSF    01.6
....................    enable_interrupts(GLOBAL); 	//Hab interrupcao geral 
0049:  MOVLW  C0
004A:  BCF    03.5
004B:  IORWF  0B,F
....................  
....................    while(1){ 
004C:  GOTO   04C
....................        
....................    } 
.................... } 
004D:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
